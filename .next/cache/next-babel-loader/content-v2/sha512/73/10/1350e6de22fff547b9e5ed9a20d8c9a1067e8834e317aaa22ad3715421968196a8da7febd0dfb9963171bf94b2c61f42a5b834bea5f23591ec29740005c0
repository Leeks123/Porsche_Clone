{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/leeks/Desktop/Project/Porsche_Clone/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    display: block;\\n    width: fit-content;\\n    position: relative;\\n    cursor: pointer;\\n    margin: 10px 0;\\n    margin-right: 20px;\\n    padding: 12px 21px;\\n    span {\\n        margin-right: 10px;\\n        letter-spacing: -1px;\\n        color: \", \";\\n    }\\n    font-size: \", \";\\n    background: \", \";\\n    border: 1px solid \", \";\\n\\n    &:hover {\\n      \", \"\\n      span {\\n        color: \", \";\\n      }\\n      border: 1px solid \", \";\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from '@emotion/styled';\nimport Link from 'next/link';\nvar Wrapper = styled.div(_templateObject(), function (props) {\n  return props.fontColor && props.fontColor;\n}, function (props) {\n  return props.size && \"\".concat(props.size, \"px\");\n}, function (props) {\n  return props.backColor && props.backColor;\n}, function (props) {\n  return props.borderColor && props.borderColor;\n}, function (props) {\n  return props.hoverBackColor && \"background-color: \".concat(props.hoverBackColor, \";\");\n}, function (props) {\n  return props.hoverFontColor && props.hoverFontColor;\n}, function (props) {\n  return props.hoverBorderColor && props.hoverBorderColor;\n});\n\nvar Button = function Button(_ref) {\n  var _ref$src = _ref.src,\n      src = _ref$src === void 0 ? '' : _ref$src,\n      _ref$text = _ref.text,\n      text = _ref$text === void 0 ? '' : _ref$text,\n      children = _ref.children,\n      color = _ref.color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 16 : _ref$size,\n      style = _ref.style,\n      onClick = _ref.onClick;\n  return __jsx(Wrapper, {\n    fontColor: color.fontColor,\n    hoverFontColor: color.hoverFontColor,\n    backColor: color.backColor,\n    hoverBackColor: color.hoverBackColor,\n    borderColor: color.borderColor,\n    hoverBorderColor: color.hoverBorderColor,\n    size: size,\n    style: style,\n    onClick: onClick\n  }, onClick ? __jsx(\"div\", null, children, __jsx(\"span\", null, text)) : __jsx(Link, {\n    href: src\n  }, __jsx(\"a\", null, children, __jsx(\"span\", null, text))));\n};\n\nexport default Button;","map":null,"metadata":{},"sourceType":"module"}