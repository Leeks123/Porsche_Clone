{"ast":null,"code":"import _toConsumableArray from \"/Users/leeks/Desktop/Project/Porsche_Clone/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _taggedTemplateLiteral from \"/Users/leeks/Desktop/Project/Porsche_Clone/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: sticky;\\n  top: 0;\\n  height: 60px;\\n  background-color: white;\\n  z-index: 20;\\n  box-shadow: 0px 1px 5px lightgray;\\n  & > div {\\n    width: 86vw;\\n    margin: 0 auto;\\n    overflow: scroll;\\n    ul {\\n      width: 1000px;\\n      padding: 0;\\n      display: flex;\\n      flex-wrap: nowrap;\\n      li {\\n        height: 48px;\\n        margin: 0 10px;\\n        padding: 15px 0 5px;\\n        list-style: none;\\n        font-size: 16px;\\n        color: black;\\n  \\n        a {\\n          color: black;\\n          &:hover {\\n            color: #d5011c;\\n          }\\n        }\\n        \", \"\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useEffect, useState, useCallback } from 'react';\nimport styled from '@emotion/styled';\nvar Wrapper = styled.div(_templateObject(), function (props) {\n  return props.active && \"&:nth-of-type(\".concat(props.active, \") { border-bottom: 3px solid #d5011c; }\");\n});\n\nvar StickyNav = function StickyNav(_ref) {\n  var navList = _ref.navList;\n\n  var _useState = useState(1),\n      activeNav = _useState[0],\n      setActiveNav = _useState[1];\n\n  var _useState2 = useState(0),\n      scrollPos = _useState2[0],\n      setScrollPos = _useState2[1];\n\n  var _useState3 = useState([]),\n      sectionPosition = _useState3[0],\n      setSectionPosition = _useState3[1];\n\n  useEffect(function () {\n    function onScroll() {\n      setScrollPos(window.scrollY);\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, []);\n  useEffect(function () {\n    setSectionPosition(_toConsumableArray(document.querySelectorAll('.sticky-nav-section')).map(function (item) {\n      return parseInt(\"\".concat(item.getBoundingClientRect().top + window.scrollY - 60), 10);\n    }));\n  }, [scrollPos]);\n  useEffect(function () {\n    sectionPosition.forEach(function (section, i) {\n      if (section <= window.scrollY) {\n        setActiveNav(+i + 1);\n      }\n    });\n  }, [scrollPos]);\n  var onClick = useCallback(function (e) {\n    var targetSectionId = e.target.getAttribute('href');\n    e.preventDefault();\n    setActiveNav(+e.target.id);\n    window.scrollTo({\n      top: document.querySelector(targetSectionId).getBoundingClientRect().top + window.scrollY - 60,\n      left: 0,\n      behavior: 'smooth'\n    });\n  }, []);\n  return __jsx(Wrapper, {\n    active: activeNav\n  }, __jsx(\"div\", null, __jsx(\"ul\", null, navList === null || navList === void 0 ? void 0 : navList.map(function (v, i) {\n    return __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#nav\".concat(i + 1),\n      id: \"\".concat(i + 1),\n      onClick: onClick\n    }, v));\n  }))));\n};\n\nexport default StickyNav;","map":null,"metadata":{},"sourceType":"module"}