{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\n/* eslint-disable max-len */\nimport { Row, Col, Collapse, Empty } from 'antd';\nimport styled from '@emotion/styled';\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\nimport { useSelector } from 'react-redux';\nimport ColorBox from './ColorBox';\nimport WheelBox from './WheelBox';\nconst {\n  Panel\n} = Collapse;\nconst responsive = {\n  all: {\n    breakpoint: {\n      max: 3000,\n      min: 0\n    },\n    items: 1\n  }\n};\nconst Wrapper = styled.div`\n  width: 86vw;\n  margin: 50px auto;\n  @media (min-width: 992px) {\n      width: 100%;\n  }\n`;\nconst ImageWrapper = styled.div`\n  img {\n      width: 100%;\n      height: 100%;\n  }\n`;\nconst Selector = styled.div`\n  margin: 20px 0;\n  .ant-collapse {\n      .ant-collapse-item {\n          border-bottom: 1px solid lightgray;\n          .ant-collapse-header {\n            font-size: 18px;\n            font-weight: bold;\n            padding-left: 5px;\n          }\n          .ant-collapse-content {\n            .ant-collapse-content-box {\n                padding: 0 0 10px 0;\n                display: flex;\n                flex-wrap: wrap;\n            }    \n          }\n      }\n  }\n\n  @media (min-width: 992px) {\n      margin: 0 20px;\n  }\n`;\nconst colors = {\n  exterior: {\n    standard: ['#FFFFFF', '#000000', '#CC0133', '#FFCC02'],\n    metalic: ['#EFF5FA', '#000001', '#333333', '#C3CDD3', '#CCCCCC', '#01194B', '#1D2738', '#3C3C32'],\n    special: ['#990033', '#C7C7BF']\n  },\n  interior: ['#2C2220', '#333333', '#CC9965', '#782E2F', '#CFD1CF']\n};\n\nconst CustomCar = ({\n  data\n}) => {\n  const exteriorColor = useSelector(state => state.modelspec.custom.exterior);\n  const interiorColor = useSelector(state => state.modelspec.custom.interior);\n  const modelType = useSelector(state => state.modelspec.type);\n  const totalImages = data[modelType].customImages;\n  const exColorType = Object.keys(colors.exterior).filter(item => colors.exterior[item].includes(exteriorColor))[0];\n  const filteredExImages = totalImages && totalImages[exColorType][colors.exterior[exColorType].indexOf(exteriorColor)];\n  const filteredInImages = totalImages && totalImages.interior[colors.interior.indexOf(interiorColor)];\n  return __jsx(Wrapper, null, totalImages ? __jsx(Row, null, __jsx(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 15\n  }, __jsx(Carousel, {\n    responsive: responsive,\n    ssr: true\n  }, filteredExImages === null || filteredExImages === void 0 ? void 0 : filteredExImages.map(item => __jsx(ImageWrapper, null, __jsx(\"img\", {\n    src: item,\n    alt: \"\"\n  }))), filteredInImages === null || filteredInImages === void 0 ? void 0 : filteredInImages.map(item => __jsx(ImageWrapper, null, __jsx(\"img\", {\n    src: item,\n    alt: \"\"\n  }))))), __jsx(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 9\n  }, __jsx(Selector, null, __jsx(Collapse, {\n    accordion: true,\n    bordered: false,\n    defaultActiveKey: ['1'],\n    expandIconPosition: \"right\",\n    ghost: true\n  }, __jsx(Panel, {\n    header: \"Exterior Color\",\n    key: \"1\"\n  }, __jsx(ColorBox, {\n    text: \"Standard Color\",\n    colors: colors.exterior.standard\n  }), __jsx(ColorBox, {\n    text: \"Metalic Color\",\n    colors: colors.exterior.metalic\n  }), __jsx(ColorBox, {\n    text: \"Special Color\",\n    colors: colors.exterior.special\n  })), __jsx(Panel, {\n    header: \"Wheels\",\n    key: \"2\"\n  }, __jsx(WheelBox, null)), __jsx(Panel, {\n    header: \"Interior Colors and Material\",\n    key: \"3\"\n  }, __jsx(ColorBox, {\n    text: \"\",\n    colors: colors.interior\n  })))))) : __jsx(Empty, null));\n};\n\nexport default CustomCar;","map":null,"metadata":{},"sourceType":"module"}