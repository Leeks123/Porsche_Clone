{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\n/* eslint-disable jsx-a11y/media-has-caption */\nimport { useRef, useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport { PlusOutlined } from '@ant-design/icons';\nimport Button from '../common/Button';\nconst Wrapper = styled.section`\n    width: 100%;\n    height: 100vh;\n    overflow: hidden;\n\n    position: sticky;\n    top: 60px;\n`;\nconst Background = styled.div`\n    width: 100%;\n    height: 100%;\n    video {\n        height: 100vh;\n        object-fit: cover;\n    }\n`;\nconst Overlay = styled.div`\n    position: relative;\n    top: -100%;\n    height: 100vh;\n\n    ${props => props.onTop ? 'overflow: scroll;' : 'overflow: hidden;'}\n    // overflow: scroll;\n    \n    .overlay-top {\n        height: 100vh;\n    }\n    .overlay-bottom {\n        background: linear-gradient(transparent,black);\n        height: 100vh;\n        z-index: 10;\n\n        .overlay-bottom-container {\n            color: white;\n            width: 86vw;\n            margin: 0 auto;\n            position: relative;\n            top: 50%;\n            transform: translateY(-50%);\n            h1 {\n                color: white;\n                font-size: 40px;\n            }\n            p {\n                width: 60%;\n                font-size: 16px;\n                margin: 60px 0;\n            }\n        }\n    }\n`;\nconst buttonColor = {\n  fontColor: 'black',\n  backColor: 'white',\n  borderColor: 'transparent',\n  hoverBackColor: '#d5001c',\n  hoverFontColor: 'white',\n  hoverBorderColor: 'transparent'\n};\n\nconst VideoOveraly = ({\n  data\n}) => {\n  const wrapper = useRef(null);\n  const video = useRef(null);\n  const {\n    0: elTop,\n    1: setElTop\n  } = useState(false);\n  useEffect(() => {\n    function onScroll() {\n      // window.scrollY : 얼마나 내렸는지\n      // document.documentElement.clientHeight : 화면에 보이는 길이\n      // document.documentElement.scrollHeight : 총길이\n      // console.log(\n      //   window.scrollY,\n      //   wrapper.current?.getBoundingClientRect().top,\n      // );\n      if (wrapper.current !== null) {\n        const elTopPos = wrapper.current.getBoundingClientRect().top;\n\n        if (elTopPos <= 100) {\n          var _video$current;\n\n          // console.log('on top');\n          setElTop(true);\n          (_video$current = video.current) === null || _video$current === void 0 ? void 0 : _video$current.play();\n        } else {\n          setElTop(false);\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, []);\n  return __jsx(Wrapper, {\n    ref: wrapper,\n    onTop: elTop\n  }, __jsx(Background, null, __jsx(\"video\", {\n    ref: video,\n    crossOrigin: \"\",\n    width: \"100%\",\n    height: \"100vh\",\n    poster: data.poster,\n    loop: true,\n    muted: true,\n    preload: \"none\"\n  }, __jsx(\"source\", {\n    src: data.src,\n    type: \"video/mp4\"\n  }))), __jsx(Overlay, {\n    onTop: elTop\n  }, __jsx(\"div\", {\n    className: \"overlay-top\"\n  }), __jsx(\"div\", {\n    className: \"overlay-bottom\"\n  }, __jsx(\"div\", {\n    className: \"overlay-bottom-container\"\n  }, __jsx(\"h1\", null, data.title), __jsx(\"p\", null, data.content), __jsx(Button, {\n    src: \"\",\n    text: \"\\uC790\\uC138\\uD788 \\uBCF4\\uAE30\",\n    color: buttonColor\n  }, __jsx(PlusOutlined, null))))));\n};\n\nexport default VideoOveraly;","map":null,"metadata":{},"sourceType":"module"}